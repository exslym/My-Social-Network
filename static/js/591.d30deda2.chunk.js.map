{"version":3,"file":"static/js/591.d30deda2.chunk.js","mappings":";oQACA,EAA0B,4CCA1B,EAAyB,4BAAzB,EAA+D,6BAA/D,EAAmG,0BAAnG,EAA6I,mCAA7I,EAA8L,iCAA9L,EAAuP,2CAAvP,EAAuW,iCAAvW,EAAuZ,kCAAvZ,EAAsc,gCAAtc,EAAif,8BAAjf,EAAgiB,oCAAhiB,EAAkpB,oCAAlpB,EAAssB,mCAAtsB,EAAyvB,mCAAzvB,EAAyyB,gCAAzyB,EAA41B,sCAA51B,EAA44B,6BAA54B,EAA47B,sFC0D57B,EA7CoD,SAAAA,GACnD,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASD,EAAMI,QAAzC,eAAKA,EAAL,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACTD,EAAUL,EAAMI,UACd,CAACJ,EAAMI,SAkBV,OACC,8BACGF,GAKD,kBACCK,GAAG,kBACHC,UAAWC,EACXC,WAAS,EAETC,SAhBmB,SAACC,GACvBP,EAAUO,EAAEC,cAAcC,QAgBvBC,OAtBuB,WAC1BZ,GAAY,GACZH,EAAMgB,iBAAiBZ,IAqBpBa,aAAcb,KAXf,iBAAKI,UAAWC,EAAoBS,QAnBd,WACxBf,GAAY,IAkBV,WACC,mCADD,IACiBH,EAAMI,QAAU,wBChC/Be,GAAcC,EAAAA,EAAAA,GAAiB,IAC/BC,GAAeD,EAAAA,EAAAA,GAAiB,KAChCE,GAAeF,EAAAA,EAAAA,GAAiB,KAyFtC,GAAeG,EAAAA,EAAAA,GAAiD,CAC/DC,KAAM,eACNC,oBAAoB,EACpBC,kBAAkB,GAHnB,EA5EI,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,aAAcC,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,QAASzB,EAAsC,EAAtCA,OAAQY,EAA8B,EAA9BA,iBAAkBc,EAAY,EAAZA,MAChE,OACC,kBAAMtB,UAAWC,EAAasB,SAAUJ,EAAxC,UACEC,IAAW,mBAAQpB,UAAWC,EAAnB,mBACZ,gBAAKD,UAAWC,EAAhB,UAQEuB,EAAAA,EAAAA,IAA6B,YAAa,WAAY,CAACC,EAAAA,EAAUd,GAAce,EAAAA,OAEjF,SAAC,EAAD,CACCL,QAASA,EACTzB,OAAQA,EACRY,iBAAkBA,KAEnB,iBAAKR,UAAWC,EAAhB,WAQEuB,EAAAA,EAAAA,IAA6B,GAAI,iBAAkB,GAAIE,EAAAA,GAAO,CAC9DC,KAAM,cAEP,kBAAOC,QAAQ,iBAAf,oCAED,gBAAK5B,UAAWC,EAAhB,UAQEuB,EAAAA,EAAAA,IACA,YACA,4BACA,CAACC,EAAAA,EAAUZ,GACXgB,EAAAA,OAGF,gBAAK7B,UAAWC,EAAhB,UAQEuB,EAAAA,EAAAA,IAA6B,WAAY,UAAW,CAACC,EAAAA,EAAUX,GAAee,EAAAA,OAEhF,iBAAK7B,UAAWC,EAAhB,WACC,gBAAKD,UAAWC,EAAhB,uBACCqB,IAAS,gBAAKtB,UAAWC,EAAhB,SAA0CqB,KACpD,gBAAKtB,UAAWC,EAAhB,SACE6B,OAAOC,KAAKV,EAAQW,UAAUC,KAAI,SAAAC,GAClC,OACC,gBAAelC,UAAWC,EAA1B,UAEEuB,EAAAA,EAAAA,IAAY,GAAD,OAAIU,EAAJ,QAAe,YAAcA,EAAIC,oBAAqB,GAAIT,EAAAA,KAF7DQ,iBChEjB,EAf8C,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aAC5CC,EAAI,kBAAcD,GACtB,OACC,8BACEA,IACA,gBAAKpC,UAAWC,EAAhB,UACC,cAAGqC,KAAMD,EAAME,OAAO,SAASC,IAAI,aAAaxC,UAAWC,EAA3D,SACEmC,SCmDP,EApDoD,SAAC,GAM9C,IALNf,EAKK,EALLA,QACAD,EAIK,EAJLA,QACAqB,EAGK,EAHLA,aACA7C,EAEK,EAFLA,OACAY,EACK,EADLA,iBAEA,OACC,gCACEY,IACA,mBAAQpB,UAAWC,EAAmBS,QAAS+B,EAA/C,wBAID,iBAAKzC,UAAWC,EAAhB,WACC,gBAAKD,UAAWC,EAAhB,SAAuCoB,EAAQqB,YAC/C,SAAC,EAAD,CACCrB,QAASA,EACTzB,OAAQA,EACRY,iBAAkBA,KAGnB,iBAAKR,UAAWC,EAAhB,WACC,wCACCoB,EAAQsB,eAAiB,qBAAuB,2BAElD,iBAAK3C,UAAWC,EAAhB,WACC,mCADD,IACiBoB,EAAQuB,8BAEzB,iBAAK5C,UAAWC,EAAhB,WACC,qCADD,IACmBoB,EAAQwB,YAG3B,iBAAK7C,UAAWC,EAAhB,WACC,gBAAKD,UAAWC,EAAhB,wBACA,gBAAKD,UAAWC,EAAhB,SACE6B,OAAOC,KAAKV,EAAQW,UAAUC,KAAI,SAAAC,GAClC,OACC,SAAC,EAAD,CAECY,aAAcZ,EACdE,aAAcf,EAAQW,SAASE,IAF1BA,kBC+Fd,EAhIyC,SAAC,GAOnC,IANNb,EAMK,EANLA,QACAzB,EAKK,EALLA,OACAY,EAIK,EAJLA,iBACAY,EAGK,EAHLA,QACA2B,EAEK,EAFLA,UACAC,EACK,EADLA,YAEA,GAA8BvD,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KAQA,IAAK0B,EACJ,OAAO,SAAC4B,EAAA,EAAD,IAuBR,OACC,iBAAKjD,UAAWC,EAAhB,WACC,gBACCD,UAAWC,EACXiD,IAAK7B,EAAQ8B,OAAOC,MAAQ/B,EAAQ8B,OAAOC,MAAQC,EACnDC,IAAI,WAEJlC,IACA,iCACC,kBACCrB,GAAG,cACHC,UAAWC,EACX0B,KAAM,OACNxB,SAjCoB,SAACC,GAAsC,IAAD,EAI9D,UAAIA,EAAEmC,OAAOgB,aAAb,OAAI,EAAgBC,QACnBT,EAAU3C,EAAEmC,OAAOgB,MAAM,QA8BvB,iBACCvD,UAAWC,EACXS,QA7Be,SAACN,GAAsC,IAAD,EACzDA,EAAEqD,iBACF,UAAAC,SAASC,eAAe,sBAAxB,SAAwCC,SAyBrC,qBAIU,iBAAM5D,UAAWC,EAAjB,gCAKXP,GACA,SAAC,EAAD,CACCmE,cAAexC,EACfA,QAASA,EACTzB,OAAQA,EACRY,iBAAkBA,EAClBY,QAASA,EACTG,SAtCa,SAACuC,GAEjBd,EAAYc,GAAUC,MAAK,WAC1BpE,GAAY,UAsCX,SAAC,EAAD,CACC0B,QAASA,EACTzB,OAAQA,EACRY,iBAAkBA,EAClBY,QAASA,EACTqB,aAAc,WACb9C,GAAY,8BCxBlB,IACA,EAAe,IAA0B,+DC7EzC,EAAuB,mBAAvB,EAAsD,wBAAtD,EAAuF,qBAAvF,GAAoH,oBCyBpH,GAfkC,SAAAH,GACjC,OACC,iBAAKQ,UAAWC,EAAhB,WACC,iBAAKD,UAAWC,EAAhB,WACC,gBAAKD,UAAWC,EAAeiD,IAAKG,EAAQC,IAAI,YAChD,uBAAI9D,EAAMwE,cAEX,iBAAKhE,UAAWC,GAAhB,WACC,gBAAKiD,IAAKe,EAAOX,IAAI,WACrB,0BAAO9D,EAAM0E,eCnBjB,GAAyB,wBAAzB,GAAyD,uBAAzD,GAAwF,uBAAxF,GAA0H,0BCcpHC,IAAcvD,EAAAA,EAAAA,GAAiB,IA0BrC,IAAeG,EAAAA,EAAAA,GAA4C,CAAEC,KAAM,oBAAnE,EAtBI,SAAAxB,GACH,OACC,kBAAM+B,SAAU/B,EAAM2B,aAAcnB,UAAWC,GAA/C,WACEuB,EAAAA,EAAAA,IACA,qBACA,cACA,CAACC,EAAAA,EAAU0C,IACXtC,EAAAA,KAUD,mBAAQ7B,UAAWC,GAAnB,4BCrBGmE,GAAsD,SAAA5E,GAC3D,IAAI6E,GAAe,OAAI7E,EAAM8E,OAC3BC,UACAtC,KAAI,SAAAuC,GAAC,OAAI,SAAC,GAAD,CAAMR,QAASQ,EAAEC,KAAMP,MAAOM,EAAEE,YAAiBF,EAAEzE,OAM9D,OACC,iCACC,cAAGC,UAAWC,GAAd,uBACA,SAAC,GAAD,CAAgBsB,SAPG,SAACoD,GACrBnF,EAAMoF,QAAQD,EAAOE,iBAOpB,gBAAK7E,UAAWC,GAAhB,SAA+BoE,QAQlC,GAAeS,EAAAA,KAAWV,ICV1B,IANyBW,EAAAA,EAAAA,KAdD,SAACC,GACxB,MAAO,CACNV,MAAOU,EAAMC,YAAYX,SAc1B,CACCM,QAASM,EAAAA,GAAAA,sBAHcH,CAKvBX,ICOF,GAhBqC,SAAA5E,GACpC,OACC,iBAAKQ,UAAWC,EAAhB,WACC,SAAC,EAAD,CACCoB,QAAS7B,EAAM6B,QACfzB,OAAQJ,EAAMI,OACdY,iBAAkBhB,EAAMgB,iBACxBY,QAAS5B,EAAM4B,QACf2B,UAAWvD,EAAMuD,UACjBC,YAAaxD,EAAMwD,eAEpB,SAAC,GAAD,QCUGmC,GAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAgDJ,OAhDIA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,iBAAAA,MACL,WACC,IAAIC,GAAyBC,KAAK7F,MAAM8F,aASxC,GAPKF,IACJA,EAASC,KAAK7F,MAAM+F,mBAEnBF,KAAK7F,MAAMgG,eAAe,WAIvBJ,EACJ,MAAM,IAAIK,MAAM,mEAGhBJ,KAAK7F,MAAMkG,eAAeN,GAC1BC,KAAK7F,MAAMmG,cAAcP,KAQ1B,+BAED,WACCC,KAAKO,mBACL,gCAED,SAAmBC,EAAsBC,GACpCT,KAAK7F,MAAM8F,eAAiBO,EAAUP,cACzCD,KAAKO,mBAEN,oBAED,WACC,OACC,SAAC,IAAD,kBACKP,KAAK7F,OADV,IAEC4B,SAAUiE,KAAK7F,MAAM8F,aACrBvC,UAAWsC,KAAK7F,MAAMuD,UACtBC,YAAaqC,KAAK7F,MAAMwD,YACxB3B,QAASgE,KAAK7F,MAAM6B,QACpBzB,OAAQyF,KAAK7F,MAAMI,OACnBY,iBAAkB6E,KAAK7F,MAAMgB,wBAG/B,EAhDI2E,CAAyBL,EAAAA,WAoE/B,IAAeiB,EAAAA,EAAAA,KACdhB,EAAAA,EAAAA,KAlBuB,SAACC,GACxB,MAAO,CACN3D,QAAS2D,EAAMC,YAAY5D,QAC3BzB,OAAQoF,EAAMC,YAAYrF,OAC1B2F,iBAAkBP,EAAMgB,KAAKZ,OAC7Ba,OAAQjB,EAAMgB,KAAKC,UAaK,CACxBP,eAAAA,EAAAA,GACAC,cAAAA,EAAAA,GACAnF,iBAAAA,EAAAA,GACAuC,UAAAA,EAAAA,GACAC,YAAAA,EAAAA,KAEDkD,EAAAA,EACAC,EAAAA,EATD,CAUEhB,sICxGIiB,EAA6B,SAACpB,GAAD,MAA0B,CAC5DiB,OAAQjB,EAAMgB,KAAKC,SAeb,SAASC,EACfG,GAwBA,OAJqCtB,EAAAA,EAAAA,IACpCqB,EACA,GAFoCrB,EAZiC,SAAAvF,GACrE,IAAMyG,EAAyBzG,EAAzByG,OAAWK,GAAjB,OAA+B9G,EAA/B,GAMA,OAAKyG,GAEE,SAACI,GAAD,UAAuBC,KAFV,SAAC,KAAD,CAAUC,GAAG","sources":["webpack://my-app/./src/components/Profile/Profile.module.scss?4008","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.scss?e49f","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/Contacts.tsx","components/Profile/ProfileInfo/ProfileData.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","assets/icon_liked.svg","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.scss?ca59","components/Profile/MyPosts/Post/Post.tsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.scss?39b9","components/Profile/MyPosts/AddPostForm/AddPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__0XleF\"};","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"ProfileInfo_avatar__Xr4LM\",\"content\":\"ProfileInfo_content__C9VSG\",\"info\":\"ProfileInfo_info__T9EEc\",\"info_username\":\"ProfileInfo_info_username__C2B1R\",\"info_status\":\"ProfileInfo_info_status__XN1xZ\",\"info_employmentStatus\":\"ProfileInfo_info_employmentStatus__xht7c\",\"info_employment\":\"ProfileInfo_info_employment__OPTgW\",\"info_skills\":\"ProfileInfo_info_skills__Q89A9\",\"info_aboutMe\":\"ProfileInfo_info_aboutMe__wIzTB\",\"editButton\":\"ProfileInfo_editButton__JulSp\",\"contacts\":\"ProfileInfo_contacts__byYDk\",\"contacts_block\":\"ProfileInfo_contacts_block__gyfVQ\",\"contacts_block_alt\":\"ProfileInfo_contacts_block_alt__rWxBl\",\"contacts_title\":\"ProfileInfo_contacts_title__8uvh4\",\"contacts_item\":\"ProfileInfo_contacts_item__ICHxg\",\"contacts_link\":\"ProfileInfo_contacts_link__Ztz3g\",\"fileloader\":\"ProfileInfo_fileloader__hXR8V\",\"fileloaderButton\":\"ProfileInfo_fileloaderButton__WEw2W\",\"tooltip\":\"ProfileInfo_tooltip__tKIE9\",\"formSummaryError\":\"ProfileInfo_formSummaryError__rabRb\"};","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { ProfileType } from '../../../types/types';\n// import { maxLengthCreator } from '../../../utils/validators/validators';\nimport styles from './ProfileInfo.module.scss';\n\n//* TYPES:\ntype PropsType = {\n\tprofile: ProfileType;\n\tstatus: string;\n\tupdateUserStatus: (status: string) => void;\n};\n\n// const maxLength40 = maxLengthCreator(40);\n\nconst ProfileStatusWithHooks: React.FC<PropsType> = props => {\n\tlet [editMode, setEditMode] = useState(false);\n\tlet [status, setStatus] = useState(props.status);\n\n\tuseEffect(() => {\n\t\tsetStatus(props.status);\n\t}, [props.status]);\n\n\tconst activateEditMode = () => {\n\t\tsetEditMode(true);\n\t\t// setTimeout(() => {\n\t\t// \tdocument.querySelector('#mainStatusInput')?.select();\n\t\t// }, 300);\n\t};\n\n\tconst deactivateEditMode = () => {\n\t\tsetEditMode(false);\n\t\tprops.updateUserStatus(status);\n\t};\n\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetStatus(e.currentTarget.value);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{!editMode ? (\n\t\t\t\t<div className={styles.info_status} onClick={activateEditMode}>\n\t\t\t\t\t<b>status:</b> {props.status || 'write something'}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<input\n\t\t\t\t\tid='mainStatusInput'\n\t\t\t\t\tclassName={styles.info_status}\n\t\t\t\t\tautoFocus\n\t\t\t\t\t// validate={[maxLength40]}\n\t\t\t\t\tonChange={onStatusChange}\n\t\t\t\t\tonBlur={deactivateEditMode}\n\t\t\t\t\tdefaultValue={status}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default ProfileStatusWithHooks;\n","import React from 'react';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { createField, Input, Textarea } from '../../commons/FormControl/FormControl';\nimport styles from './ProfileInfo.module.scss';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport type { ProfileType } from '../../../types/types';\nimport type { GetStringKeys } from '../../commons/FormControl/FormControl';\n// import Contacts from './Contacts';\n\nconst maxLength50 = maxLengthCreator(50);\nconst maxLength100 = maxLengthCreator(100);\nconst maxLength200 = maxLengthCreator(200);\n\n//* TYPES:\ntype ProfileTypeKeys = GetStringKeys<ProfileType>;\ntype ProfileDataFormPropsType = {\n\tprofile: ProfileType;\n\tisOwner: boolean;\n\tstatus: string;\n\tupdateUserStatus: (status: string) => void;\n};\n\nconst ProfileDataForm: React.FC<\n\tInjectedFormProps<ProfileType, ProfileDataFormPropsType> & ProfileDataFormPropsType\n> = ({ handleSubmit, isOwner, profile, status, updateUserStatus, error }) => {\n\treturn (\n\t\t<form className={styles.info} onSubmit={handleSubmit}>\n\t\t\t{isOwner && <button className={styles.editButton}>save</button>}\n\t\t\t<div className={styles.info_username}>\n\t\t\t\t{/* <Field\n\t\t\t\t\t\tcomponent={Input}\n\t\t\t\t\t\tname='fullName'\n\t\t\t\t\t\tplaceholder='edit name'\n\t\t\t\t\t\tvalidate={[required, maxLength50]}\n\t\t\t\t\t\ttype='input'\n\t\t\t\t\t/> */}\n\t\t\t\t{createField<ProfileTypeKeys>('edit name', 'fullName', [required, maxLength50], Input)}\n\t\t\t</div>\n\t\t\t<ProfileStatusWithHooks\n\t\t\t\tprofile={profile}\n\t\t\t\tstatus={status}\n\t\t\t\tupdateUserStatus={updateUserStatus}\n\t\t\t/>\n\t\t\t<div className={styles.info_employmentStatus}>\n\t\t\t\t{/* <Field\n\t\t\t\t\t\tcomponent={Input}\n\t\t\t\t\t\tname='lookingForAJob'\n\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\tid='lookingForAJob'\n\t\t\t\t\t\tclassName={styles.checkbox}\n\t\t\t\t\t/> */}\n\t\t\t\t{createField<ProfileTypeKeys>('', 'lookingForAJob', [], Input, {\n\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t})}\n\t\t\t\t<label htmlFor='lookingForAJob'>Looking for a job!</label>\n\t\t\t</div>\n\t\t\t<div className={styles.info_skills}>\n\t\t\t\t{/* <Field\n\t\t\t\t\t\tcomponent={Textarea}\n\t\t\t\t\t\tname='lookingForAJobDescription'\n\t\t\t\t\t\tplaceholder='my skills'\n\t\t\t\t\t\tvalidate={[required, maxLength100]}\n\t\t\t\t\t\ttype='textarea'\n\t\t\t\t\t/> */}\n\t\t\t\t{createField<ProfileTypeKeys>(\n\t\t\t\t\t'my skills',\n\t\t\t\t\t'lookingForAJobDescription',\n\t\t\t\t\t[required, maxLength100],\n\t\t\t\t\tTextarea,\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className={styles.info_aboutMe}>\n\t\t\t\t{/* <Field\n\t\t\t\t\t\tcomponent={Textarea}\n\t\t\t\t\t\tname='aboutMe'\n\t\t\t\t\t\tplaceholder='about me'\n\t\t\t\t\t\tvalidate={[required, maxLength200]}\n\t\t\t\t\t\ttype='Textarea'\n\t\t\t\t\t/> */}\n\t\t\t\t{createField<ProfileTypeKeys>('about me', 'aboutMe', [required, maxLength200], Textarea)}\n\t\t\t</div>\n\t\t\t<div className={styles.contacts}>\n\t\t\t\t<div className={styles.contacts_title}>Contacts:</div>\n\t\t\t\t{error && <div className={styles.formSummaryError}>{error}</div>}\n\t\t\t\t<div className={styles.contacts_block}>\n\t\t\t\t\t{Object.keys(profile.contacts).map(key => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={key} className={styles.contacts_item}>\n\t\t\t\t\t\t\t\t{/* //! todo: create some solution for embedded objects */}\n\t\t\t\t\t\t\t\t{createField(`${key}.com`, 'contacts.' + key.toLocaleLowerCase(), [], Input)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\n// export default ProfileDataForm;\nexport default reduxForm<ProfileType, ProfileDataFormPropsType>({\n\tform: 'edit-profile',\n\tenableReinitialize: true,\n\tdestroyOnUnmount: false,\n})(ProfileDataForm);\n\n// export default ProfileDataForm;\n","import React from 'react';\nimport styles from './ProfileInfo.module.scss';\n\n//* TYPES:\ntype ContactsPropsType = {\n\tcontactTitle: string;\n\tcontactValue: string;\n};\n\nconst Contacts: React.FC<ContactsPropsType> = ({ contactValue }) => {\n\tlet path = `https://${contactValue}`;\n\treturn (\n\t\t<>\n\t\t\t{contactValue && (\n\t\t\t\t<div className={styles.contacts_item}>\n\t\t\t\t\t<a href={path} target='_blank' rel='noreferrer' className={styles.contacts_link}>\n\t\t\t\t\t\t{contactValue}\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Contacts;\n","import React from 'react';\nimport styles from './ProfileInfo.module.scss';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport Contacts from './Contacts';\nimport type { ContactsType, ProfileType } from '../../../types/types';\n\n//* TYPES:\ntype ProfileDataPropsType = {\n\tprofile: ProfileType;\n\tgoToEditMode: () => void;\n\tisOwner: boolean;\n\tstatus: string;\n\tupdateUserStatus: (status: string) => void;\n};\n\nconst ProfileData: React.FC<ProfileDataPropsType> = ({\n\tprofile,\n\tisOwner,\n\tgoToEditMode,\n\tstatus,\n\tupdateUserStatus,\n}) => {\n\treturn (\n\t\t<>\n\t\t\t{isOwner && (\n\t\t\t\t<button className={styles.editButton} onClick={goToEditMode}>\n\t\t\t\t\tedit mode\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<div className={styles.info}>\n\t\t\t\t<div className={styles.info_username}>{profile.fullName}</div>\n\t\t\t\t<ProfileStatusWithHooks\n\t\t\t\t\tprofile={profile}\n\t\t\t\t\tstatus={status}\n\t\t\t\t\tupdateUserStatus={updateUserStatus}\n\t\t\t\t/>\n\n\t\t\t\t<div className={styles.info_employmentStatus}>\n\t\t\t\t\t<b>employment: </b>\n\t\t\t\t\t{profile.lookingForAJob ? 'Looking for a job!' : \"I'm already employed\"}\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.info_skills}>\n\t\t\t\t\t<b>skills:</b> {profile.lookingForAJobDescription}\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.info_aboutMe}>\n\t\t\t\t\t<b>about me:</b> {profile.aboutMe}\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.contacts}>\n\t\t\t\t\t<div className={styles.contacts_title}>contacts:</div>\n\t\t\t\t\t<div className={styles.contacts_block}>\n\t\t\t\t\t\t{Object.keys(profile.contacts).map(key => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Contacts\n\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\tcontactTitle={key}\n\t\t\t\t\t\t\t\t\tcontactValue={profile.contacts[key as keyof ContactsType]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ProfileData;\n","import React, { ChangeEvent, useState } from 'react';\nimport Preloader from '../../commons/Preloader/Preloader';\nimport styles from './ProfileInfo.module.scss';\nimport avatar from '../../../assets/avatar-wh.png';\nimport ProfileDataForm from './ProfileDataForm';\nimport ProfileData from './ProfileData';\nimport type { ProfileType } from '../../../types/types';\n// import ProfileStatus from './ProfileStatus';\n// import ProfileStatusWithHooks from './ProfileStatusWithHooks';\n// import Contacts from './Contacts';\n\n//* TYPES:\ntype PropsType = {\n\tprofile: ProfileType | null;\n\tstatus: string;\n\tupdateUserStatus: (status: string) => void;\n\tisOwner: boolean;\n\tsavePhoto: (file: File) => void;\n\tsaveProfile: (profile: ProfileType) => Promise<any>;\n};\n\nconst ProfileInfo: React.FC<PropsType> = ({\n\tprofile,\n\tstatus,\n\tupdateUserStatus,\n\tisOwner,\n\tsavePhoto,\n\tsaveProfile,\n}) => {\n\tlet [editMode, setEditMode] = useState(false);\n\n\t// let [initialValue, setValues] = useState(props.profile);\n\n\t// useEffect(() => {\n\t// \tsetValues(props.profile);\n\t// }, [props.profile]);\n\n\tif (!profile) {\n\t\treturn <Preloader />;\n\t}\n\n\tconst onAvatarSelected = (e: ChangeEvent<HTMLInputElement>) => {\n\t\t// if (e.target.files && e.target.files.length) {\n\t\t// \tsavePhoto(e.target.files[0]);\n\t\t// }\n\t\tif (e.target.files?.length) {\n\t\t\tsavePhoto(e.target.files[0]);\n\t\t}\n\t};\n\tconst uploadPhoto = (e: ChangeEvent<HTMLInputElement>) => {\n\t\te.preventDefault();\n\t\tdocument.getElementById('avatarInput')?.click();\n\t};\n\n\tconst onSubmit = (formData: ProfileType) => {\n\t\t//! todo: remove then\n\t\tsaveProfile(formData).then(() => {\n\t\t\tsetEditMode(false);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className={styles.content}>\n\t\t\t<img\n\t\t\t\tclassName={styles.avatar}\n\t\t\t\tsrc={profile.photos.large ? profile.photos.large : avatar}\n\t\t\t\talt='avatar'\n\t\t\t/>\n\t\t\t{isOwner && (\n\t\t\t\t<>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='avatarInput'\n\t\t\t\t\t\tclassName={styles.fileloader}\n\t\t\t\t\t\ttype={'file'}\n\t\t\t\t\t\tonChange={onAvatarSelected}\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={styles.fileloaderButton}\n\t\t\t\t\t\tonClick={uploadPhoto as unknown as React.MouseEventHandler<HTMLDivElement>}\n\t\t\t\t\t>\n\t\t\t\t\t\t&#10047; <span className={styles.tooltip}>Upload photo</span>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t{editMode ? (\n\t\t\t\t<ProfileDataForm\n\t\t\t\t\tinitialValues={profile}\n\t\t\t\t\tprofile={profile}\n\t\t\t\t\tstatus={status}\n\t\t\t\t\tupdateUserStatus={updateUserStatus}\n\t\t\t\t\tisOwner={isOwner}\n\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<ProfileData\n\t\t\t\t\tprofile={profile}\n\t\t\t\t\tstatus={status}\n\t\t\t\t\tupdateUserStatus={updateUserStatus}\n\t\t\t\t\tisOwner={isOwner}\n\t\t\t\t\tgoToEditMode={() => {\n\t\t\t\t\t\tsetEditMode(true);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\n// const ProfileData = props => {\n// \treturn (\n// \t\t<>\n// \t\t\t{props.isOwner && (\n// \t\t\t\t<button className={styles.editButton} onClick={props.goToEditMode}>\n// \t\t\t\t\tedit mode\n// \t\t\t\t</button>\n// \t\t\t)}\n// \t\t\t<div className={styles.info}>\n// \t\t\t\t<div className={styles.info_username}>{props.profile.fullName}</div>\n// \t\t\t\t<ProfileStatusWithHooks\n// \t\t\t\t\tprofile={props.profile}\n// \t\t\t\t\tstatus={props.status}\n// \t\t\t\t\tupdateUserStatus={props.updateUserStatus}\n// \t\t\t\t/>\n// \t\t\t\t<div className={styles.info_employmentStatus}>\n// \t\t\t\t\t<b>{props.profile.lookingForAJob ? 'Looking for a job!' : \"I'm already employed\"}</b>\n// \t\t\t\t</div>\n// \t\t\t\t<div className={styles.info_skills}>\n// \t\t\t\t\t<b>Sklills:</b> {props.profile.lookingForAJobDescription}\n// \t\t\t\t</div>\n// \t\t\t\t<div className={styles.info_aboutMe}>\n// \t\t\t\t\t<b>About me:</b> {props.profile.aboutMe}\n// \t\t\t\t</div>\n// \t\t\t</div>\n\n// \t\t\t<div className={styles.contacts}>\n// \t\t\t\t<div className={styles.contacts_title}>Contacts:</div>\n// \t\t\t\t<div className={styles.contacts_block}>\n// \t\t\t\t\t{Object.keys(props.profile.contacts).map(key => {\n// \t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t<Contacts key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\n// \t\t\t\t\t\t);\n// \t\t\t\t\t})}\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</>\n// \t);\n// };\n\nexport default ProfileInfo;\n","var _desc, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconLiked(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 256,\n    height: 256,\n    viewBox: \"0 0 256 256\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Fabric.js 1.7.22\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null)), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(128 128) scale(0.72 0.72)\",\n    style: {}\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      stroke: \"none\",\n      strokeWidth: 0,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"none\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \"translate(-175.05 -175.05000000000004) scale(3.89 3.89)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 77.236 8.396 H 12.764 C 5.715 8.396 0 14.111 0 21.16 v 35.913 c 0 7.05 5.715 12.764 12.764 12.764 h 16.724 L 45 85.35 l 15.511 -15.511 h 16.724 c 7.05 0 12.764 -5.715 12.764 -12.764 V 21.16 C 90 14.111 84.285 8.396 77.236 8.396 z\",\n    style: {\n      stroke: \"none\",\n      strokeWidth: 1,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"rgb(238,81,98)\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \" matrix(1 0 0 1 0 0) \",\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 61.031 28.502 L 61.031 28.502 c -3.612 -3.612 -9.468 -3.612 -13.079 0 L 45 31.454 l -2.952 -2.952 c -3.612 -3.612 -9.468 -3.612 -13.079 0 v 0 c -3.612 3.612 -3.612 9.468 0 13.079 l 2.952 2.952 L 45 57.613 L 58.08 44.533 l 0 0 l 2.952 -2.952 C 64.643 37.97 64.643 32.114 61.031 28.502 z\",\n    style: {\n      stroke: \"none\",\n      strokeWidth: 1,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"rgb(255,255,255)\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \" matrix(1 0 0 1 0 0) \",\n    strokeLinecap: \"round\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconLiked);\nexport default __webpack_public_path__ + \"static/media/icon_liked.43de9c4003eb317a4ca47f5771d2d0e7.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__IVs4O\",\"post_wrap\":\"Post_post_wrap__zYVt2\",\"avatar\":\"Post_avatar__6eGNa\",\"likes\":\"Post_likes__3e+38\"};","import React from 'react';\nimport avatar from '../../../../assets/avatar_own.jpg';\nimport likes from '../../../../assets/icon_liked.svg';\nimport styles from './Post.module.scss';\n\n//* TYPES:\ntype PropsType = {\n\tmessage: string;\n\tcount: number | null;\n};\n\nconst Post: React.FC<PropsType> = props => {\n\treturn (\n\t\t<div className={styles.item}>\n\t\t\t<div className={styles.post_wrap}>\n\t\t\t\t<img className={styles.avatar} src={avatar} alt='avatar' />\n\t\t\t\t<p>{props.message}</p>\n\t\t\t</div>\n\t\t\t<div className={styles.likes}>\n\t\t\t\t<img src={likes} alt='likes' />\n\t\t\t\t<span>{props.count}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MyPosts_button__1+FKV\",\"title\":\"MyPosts_title__VyQI1\",\"posts\":\"MyPosts_posts__TqAU7\",\"postForm\":\"MyPosts_postForm__Mb4Ae\"};","import React from 'react';\nimport styles from '../MyPosts.module.scss';\nimport { reduxForm, InjectedFormProps } from 'redux-form';\n// import { FormValidator } from '../../../commons/FormControl/FormControl';\nimport { maxLengthCreator, required } from '../../../../utils/validators/validators';\nimport { createField, Textarea } from '../../../commons/FormControl/FormControl';\nimport type { GetStringKeys } from '../../../commons/FormControl/FormControl';\n\n//* TYPES:\ntype PropsType = {};\nexport type AddPostFormValuesTypeKeys = GetStringKeys<AddPostFormValuesType>;\nexport type AddPostFormValuesType = {\n\tnewPostText: string;\n};\n\nconst maxLength20 = maxLengthCreator(20);\n\nconst AddNewPostForm: React.FC<\n\tInjectedFormProps<AddPostFormValuesType, PropsType> & PropsType\n> = props => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit} className={styles.postForm}>\n\t\t\t{createField<AddPostFormValuesTypeKeys>(\n\t\t\t\t'Enter your message',\n\t\t\t\t'newPostText',\n\t\t\t\t[required, maxLength20],\n\t\t\t\tTextarea,\n\t\t\t)}\n\t\t\t{/* <Field\n\t\t\t\tcomponent={Textarea}\n\t\t\t\tname='newPostText'\n\t\t\t\tplaceholder='Enter your message'\n\t\t\t\tclassName={styles.textarea}\n\t\t\t\tvalidate={[required, maxLength20]}\n\t\t\t\ttype='textarea'\n\t\t\t/> */}\n\t\t\t<button className={styles.button}>Add post</button>\n\t\t</form>\n\t);\n};\n\nexport default reduxForm<AddPostFormValuesType, PropsType>({ form: 'profile-add-post' })(\n\tAddNewPostForm,\n);\n","import React from 'react';\nimport Post from './Post/Post';\nimport styles from './MyPosts.module.scss';\nimport AddNewPostForm from './AddPostForm/AddPostForm';\nimport type { AddPostFormValuesType } from './AddPostForm/AddPostForm';\nimport type { PostType } from '../../../types/types';\n\n//* TYPES:\nexport type MapPropsType = {\n\tposts: Array<PostType>;\n};\nexport type DispatchPropsType = {\n\taddPost: (newPostText: string) => void;\n};\n\nconst MyPosts: React.FC<MapPropsType & DispatchPropsType> = props => {\n\tlet postElements = [...props.posts]\n\t\t.reverse()\n\t\t.map(p => <Post message={p.post} count={p.likesCount} key={p.id} />);\n\n\tlet onAddPostClick = (values: AddPostFormValuesType) => {\n\t\tprops.addPost(values.newPostText);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<p className={styles.title}>My posts</p>\n\t\t\t<AddNewPostForm onSubmit={onAddPostClick} />\n\t\t\t<div className={styles.posts}>{postElements}</div>\n\t\t</>\n\t);\n};\n\n// const MyPostsMemo = React.memo(MyPosts);\n// export default MyPostsMemo;\n\nexport default React.memo(MyPosts);\n","import { connect } from 'react-redux';\nimport { actions } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport type { MapPropsType, DispatchPropsType } from './MyPosts';\nimport type { AppStateType } from '../../../redux/redux-store';\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tposts: state.profilePage.posts,\n\t\t// newPostText: state.profilePage.newPostText,\n\t};\n};\n// const mapDispatchToProps = dispatch => {\n// \treturn {\n// \t\taddPost: newPostText => {\n// \t\t\tdispatch(actions.addPostActionCreator(newPostText));\n// \t\t},\n// \t};\n// };\n\nconst MyPostsContainer = connect<MapPropsType, DispatchPropsType, {}, AppStateType>(\n\tmapStateToProps,\n\t{\n\t\taddPost: actions.addPostActionCreator,\n\t},\n)(MyPosts);\nexport default MyPostsContainer;\n// export default compose(connect(mapStateToProps, {addPost: addPostActionCreator}))(MyPostsMemo);\n","import React from 'react';\nimport styles from './Profile.module.scss';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport type { ProfileType } from '../../types/types';\n\n//* TYPES:\ntype PropsType = {\n\tprofile: ProfileType | null;\n\tstatus: string;\n\tupdateUserStatus: (status: string) => void;\n\tisOwner: boolean;\n\tsavePhoto: (file: File) => void;\n\tsaveProfile: (profile: ProfileType) => Promise<any>;\n};\n\nconst Profile: React.FC<PropsType> = props => {\n\treturn (\n\t\t<div className={styles.profile}>\n\t\t\t<ProfileInfo\n\t\t\t\tprofile={props.profile}\n\t\t\t\tstatus={props.status}\n\t\t\t\tupdateUserStatus={props.updateUserStatus}\n\t\t\t\tisOwner={props.isOwner}\n\t\t\t\tsavePhoto={props.savePhoto}\n\t\t\t\tsaveProfile={props.saveProfile}\n\t\t\t/>\n\t\t\t<MyPostsContainer />\n\t\t</div>\n\t);\n};\n\nexport default Profile;\n","import React from 'react';\n// import { RouteComponentProps } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n\tgetUserProfile,\n\tgetUserStatus,\n\tupdateUserStatus,\n\tsavePhoto,\n\tsaveProfile,\n} from '../../redux/profile-reducer';\n// import { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { withRouter } from '../../hoc/withRouter';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport Profile from './Profile';\nimport type { AppStateType } from '../../redux/redux-store';\nimport type { ProfileType } from '../../types/types';\n// import { Navigate } from 'react-router-dom';\n\n//* TYPES:\ntype MapPropsType = ReturnType<typeof mapStateToProps>;\ntype DispatchPropsType = {\n\tgetUserProfile: (userId: number) => void;\n\tgetUserStatus: (userId: number) => void;\n\tupdateUserStatus: (status: string) => void;\n\tsavePhoto: (file: File) => void;\n\tsaveProfile: (profile: ProfileType) => Promise<any>;\n\t//\n\trouterUserId: string;\n\trouterNavigate: (path: string) => void;\n};\ntype PropsType = MapPropsType & DispatchPropsType;\n// type PathParamsType = {\n// \tuserId: string;\n// };\n// type PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>;\n\nclass ProfileContainer extends React.Component<PropsType> {\n\trefreshProfile() {\n\t\tlet userId: number | null = +this.props.routerUserId;\n\t\t// let userId: number | null = +this.props.router.params.userId;\n\t\tif (!userId) {\n\t\t\tuserId = this.props.authorizedUserId;\n\t\t\tif (!userId) {\n\t\t\t\tthis.props.routerNavigate('/login');\n\t\t\t\t// this.props.router.navigate('/login');\n\t\t\t}\n\t\t}\n\t\tif (!userId) {\n\t\t\tthrow new Error('ID should exists in URI params or in state (\"authorizedUserId\")');\n\t\t\t// console.error('ID should exists in URI params or in state (\"authorizedUserId\")');\n\t\t} else {\n\t\t\tthis.props.getUserProfile(userId);\n\t\t\tthis.props.getUserStatus(userId);\n\t\t}\n\t\t// usersAPI.getProfile(userId).then(response => {\n\t\t// \tthis.props.setUserProfile(response.data);\n\t\t// });\n\t\t// axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`).then(response => {\n\t\t// \tthis.props.setUserProfile(response.data);\n\t\t// });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.refreshProfile();\n\t}\n\n\tcomponentDidUpdate(prevProps: PropsType, prevState: PropsType) {\n\t\tif (this.props.routerUserId !== prevProps.routerUserId) {\n\t\t\tthis.refreshProfile();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Profile\n\t\t\t\t{...this.props}\n\t\t\t\tisOwner={!this.props.routerUserId}\n\t\t\t\tsavePhoto={this.props.savePhoto}\n\t\t\t\tsaveProfile={this.props.saveProfile}\n\t\t\t\tprofile={this.props.profile}\n\t\t\t\tstatus={this.props.status}\n\t\t\t\tupdateUserStatus={this.props.updateUserStatus}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tprofile: state.profilePage.profile,\n\t\tstatus: state.profilePage.status,\n\t\tauthorizedUserId: state.auth.userId,\n\t\tisAuth: state.auth.isAuth,\n\t};\n};\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n\n// export default connect(mapStateToProps, { setUserProfile })(ProfileContainer);\n// export default connect(mapStateToProps, { getUserProfile })(WithUrlDataContainerComponent);\n//\n// compose<React.ComponentType>()()\n\nexport default compose<React.ComponentType>(\n\tconnect(mapStateToProps, {\n\t\tgetUserProfile,\n\t\tgetUserStatus,\n\t\tupdateUserStatus,\n\t\tsavePhoto,\n\t\tsaveProfile,\n\t}),\n\twithAuthRedirect,\n\twithRouter,\n)(ProfileContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport type { AppStateType } from '../redux/redux-store';\n\n//* TYPES:\ntype MapPropsType = {\n\tisAuth: boolean;\n};\ntype DispatchPropsType = {};\n\nconst mapStateToPropsForRedirect = (state: AppStateType) => ({\n\tisAuth: state.auth.isAuth,\n});\n\n/* Class cmomponent:\nexport const withAuthRedirect = Component => {\n\tclass RedirectComponent extends React.Component {\n\t\trender() {\n\t\t\tif (!this.props.isAuth) return <Navigate to={'/login'} />;\n\t\t\treturn <Component {...this.props} />;\n\t\t}\n\t}\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\treturn ConnectedAuthRedirectComponent;\n}; */\n//* function cmomponent:\nexport function withAuthRedirect<WCP extends JSX.IntrinsicAttributes>(\n\tWrappedComponent: React.ComponentType,\n) {\n\t/* \tfunction RedirectComponent(props: WCP & MapPropsType) {\n\t\tlet { isAuth, ...restProps } = props;\n\t\tif (!isAuth) return <Navigate to='/login' replace />;\n\t\treturn <WrappedComponent {...(restProps as unknown as WCP)} />;\n\t} */\n\t//* refactored:\n\tconst RedirectComponent: React.FC<MapPropsType & DispatchPropsType> = props => {\n\t\tlet { isAuth, ...restProps } = props;\n\t\t// return isAuth ? (\n\t\t// \t<WrappedComponent {...(restProps as WCP)} />\n\t\t// ) : (\n\t\t// \t<Navigate to='/login' replace={true} />\n\t\t// );\n\t\tif (!isAuth) return <Navigate to='/login' />;\n\t\t// return <WrappedComponent {...props} />;\n\t\treturn <WrappedComponent {...(restProps as WCP)} />;\n\t};\n\n\tlet ConnectedAuthRedirectComponent = connect<MapPropsType, DispatchPropsType, WCP, AppStateType>(\n\t\tmapStateToPropsForRedirect,\n\t\t{},\n\t)(RedirectComponent);\n\treturn ConnectedAuthRedirectComponent;\n}\n\n//* TYPES:\n// type MapStatePropsType = ReturnType<typeof mapStateToPropsForRedirect>;\n\n// let mapStateToPropsForRedirect = (state: AppStateType) => ({\n// \tisAuth: state.auth.isAuth,\n// });\n\n// export const withAuthRedirect = (Component: React.ComponentType) => {\n// \tclass RedirectComponent extends React.Component<MapStatePropsType> {\n// \t\trender() {\n// \t\t\tif (!this.props.isAuth) return <Navigate to={'/login'} />;\n\n// \t\t\treturn <Component {...this.props} />;\n// \t\t}\n// \t}\n// \treturn connect(mapStateToPropsForRedirect)(RedirectComponent);\n// };\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","id","className","styles","autoFocus","onChange","e","currentTarget","value","onBlur","updateUserStatus","defaultValue","onClick","maxLength50","maxLengthCreator","maxLength100","maxLength200","reduxForm","form","enableReinitialize","destroyOnUnmount","handleSubmit","isOwner","profile","error","onSubmit","createField","required","Input","type","htmlFor","Textarea","Object","keys","contacts","map","key","toLocaleLowerCase","contactValue","path","href","target","rel","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","savePhoto","saveProfile","Preloader","src","photos","large","avatar","alt","files","length","preventDefault","document","getElementById","click","initialValues","formData","then","message","likes","count","maxLength20","MyPosts","postElements","posts","reverse","p","post","likesCount","values","addPost","newPostText","React","connect","state","profilePage","actions","ProfileContainer","userId","this","routerUserId","authorizedUserId","routerNavigate","Error","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","compose","auth","isAuth","withAuthRedirect","withRouter","mapStateToPropsForRedirect","WrappedComponent","restProps","to"],"sourceRoot":""}