{"version":3,"file":"static/js/246.99592353.chunk.js","mappings":"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","sources":["components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","hoc/withAuthRedirect.tsx","assets|sync|/^/.//.*$"],"sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from '../../../Styles.module.scss';\n// import styles from './DialogItem.module.scss';\n\n//* TYPES:\ntype PropsType = {\n\tavatar: string | null;\n\tname: string;\n\tid: number;\n};\n\nconst DialogItem: React.FC<PropsType> = props => {\n\tlet path = `/dialogs/${props.id}`;\n\tlet avatarSrc = require(`../../../assets/${props.avatar}`);\n\n\treturn (\n\t\t<div className={styles.Dialogs_item}>\n\t\t\t<NavLink to={path} className={({ isActive }) => (isActive ? styles.active : undefined)}>\n\t\t\t\t<img className={styles.Dialogs_avatar} src={avatarSrc} alt='avatar'></img>\n\t\t\t\t<p className={styles.Dialogs_name}>{props.name}</p>\n\t\t\t</NavLink>\n\t\t</div>\n\t);\n};\n\nexport default DialogItem;\n","import React from 'react';\nimport styles from '../../../Styles.module.scss';\n// import styles from './Message.module.scss';\n\n//* TYPES:\ntype PropsType = {\n\tmessage: string;\n};\n\nconst Message: React.FC<PropsType> = props => {\n\treturn (\n\t\t<div className={styles.Dialogs_message}>\n\t\t\t{/* <p className={styles.app_dialogs_messageIn}>{props.message}</p> */}\n\t\t\t<p className={styles.Dialogs_messageOut}>{props.message}</p>\n\t\t</div>\n\t);\n};\n\nexport default Message;\n","import React from 'react';\n// import styles from '../../Dialogs/Dialogs.module.scss';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\nimport styles from '../../../Styles.module.scss';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { createField, Textarea } from '../../commons/FormControl/FormControl';\nimport type { AddMessageFormValuesType } from '../Dialogs';\n\n//* TYPES:\ntype AddMessageFormValuesTypeKeys = Extract<keyof AddMessageFormValuesType, string>;\ntype PropsType = {};\n\nconst maxLength300 = maxLengthCreator(300);\nconst AddMessageForm: React.FC<\n\tInjectedFormProps<AddMessageFormValuesType, PropsType> & PropsType\n> = props => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit} className={styles.Dialogs_newMessage}>\n\t\t\t{createField<AddMessageFormValuesTypeKeys>(\n\t\t\t\t'Enter your message',\n\t\t\t\t'newMessageBody',\n\t\t\t\t[required, maxLength300],\n\t\t\t\tTextarea,\n\t\t\t\t{\n\t\t\t\t\ttype: 'input',\n\t\t\t\t},\n\t\t\t)}\n\t\t\t{/* <Field\n\t\t\t\tcomponent={Textarea}\n\t\t\t\tname='newMessageBody'\n\t\t\t\tplaceholder='Enter your message'\n\t\t\t\tclassName={styles.app_dialogs_textarea}\n\t\t\t\tvalidate={[required, maxLength300]}\n\t\t\t\ttype='textarea'\n\t\t\t/> */}\n\t\t\t<button className={styles.Dialogs_button}>Send</button>\n\t\t</form>\n\t);\n};\n\n/* export const AddMessageReduxForm = reduxForm({\n\tform: 'dialogAddMessageForm',\n})(AddMessageForm); */\nexport default reduxForm<AddMessageFormValuesType, PropsType>({\n\tform: 'dialog-add-message-form',\n})(AddMessageForm);\n","import React from 'react';\nimport styles from '../../Styles.module.scss';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\n// import styles from './Dialogs.module.scss';\n// import { Navigate } from 'react-router-dom';\n// import AddMessageReduxForm  from './AddMessageForm/AddMessageForm';\nimport type { InitialStateType } from '../../redux/dialogs-reducer';\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\n\n//* TYPES:\ntype PropsType = {\n\tdialogsPage: InitialStateType;\n\t// isAuth: boolean;\n\tsendMessage: (newMessageBody: string) => void;\n};\nexport type AddMessageFormValuesType = {\n\tnewMessageBody: string;\n};\n\nconst Dialogs: React.FC<PropsType> = props => {\n\tlet state = props.dialogsPage;\n\n\tlet messagesElements = state.messages.map(m => <Message key={m.id} message={m.message} />);\n\tlet dialogsElements = state.dialogs.map(d => (\n\t\t<DialogItem key={d.id} avatar={d.avatar} name={d.name} id={d.id} />\n\t));\n\tlet addNewMessage = (values: AddMessageFormValuesType) => {\n\t\tprops.sendMessage(values.newMessageBody);\n\t};\n\n\t// if (!props.isAuth) return <Navigate to={'/login'} />;\n\treturn (\n\t\t<div className={styles.Dialogs}>\n\t\t\t<div className={styles.Dialogs_items}>{dialogsElements}</div>\n\t\t\t<div className={styles.Dialogs_messages}>{messagesElements}</div>\n\t\t\t<AddMessageForm onSubmit={addNewMessage} />\n\t\t\t{/* <AddMessageReduxForm onSubmit={addNewMessage} /> */}\n\t\t</div>\n\t);\n};\n\nexport default Dialogs;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { actions } from '../../redux/dialogs-reducer';\nimport type { AppStateGlobalType } from '../../redux/redux-store';\nimport Dialogs from './Dialogs';\n\nconst mapStateToProps = (state: AppStateGlobalType) => {\n\treturn {\n\t\tdialogsPage: state.dialogsPage,\n\t\t// dialogs: state.dialogsPage.dialogs,\n\t\t// messages: state.dialogsPage.messages,\n\t\t// newMessageBody: state.dialogsPage.newMessageBody,\n\t};\n};\n\n/* const mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsendMessage: newMessageBody => {\n\t\t\tdispatch(actions.sendMessage(newMessageBody));\n\t\t},\n\t};\n}; */\n\n/* let AuthRedirectComponent = withAuthRedirect(Dialogs);\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\nexport default DialogsContainer; */\nexport default compose<React.ComponentType>(\n\tconnect(mapStateToProps, { ...actions }),\n\twithAuthRedirect,\n)(Dialogs);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport type { AppStateGlobalType } from '../redux/redux-store';\n\n//* TYPES:\ntype MapPropsType = {\n\tisAuth: boolean;\n};\ntype DispatchPropsType = {};\n\nconst mapStateToPropsForRedirect = (state: AppStateGlobalType) => ({\n\tisAuth: state.auth.isAuth,\n});\n\n/* Class cmomponent:\nexport const withAuthRedirect = Component => {\n\tclass RedirectComponent extends React.Component {\n\t\trender() {\n\t\t\tif (!this.props.isAuth) return <Navigate to={'/login'} />;\n\t\t\treturn <Component {...this.props} />;\n\t\t}\n\t}\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\treturn ConnectedAuthRedirectComponent;\n}; */\n//* function cmomponent:\nexport function withAuthRedirect<WCP extends JSX.IntrinsicAttributes>(\n\tWrappedComponent: React.ComponentType,\n) {\n\t/* \tfunction RedirectComponent(props: WCP & MapPropsType) {\n\t\tlet { isAuth, ...restProps } = props;\n\t\tif (!isAuth) return <Navigate to='/login' replace />;\n\t\treturn <WrappedComponent {...(restProps as unknown as WCP)} />;\n\t} */\n\t//* refactored:\n\tconst RedirectComponent: React.FC<MapPropsType & DispatchPropsType> = props => {\n\t\tlet { isAuth, ...restProps } = props;\n\t\t// return isAuth ? (\n\t\t// \t<WrappedComponent {...(restProps as WCP)} />\n\t\t// ) : (\n\t\t// \t<Navigate to='/login' replace={true} />\n\t\t// );\n\t\tif (!isAuth) return <Navigate to='/login' />;\n\t\t// return <WrappedComponent {...props} />;\n\t\treturn <WrappedComponent {...(restProps as WCP)} />;\n\t};\n\n\tlet ConnectedAuthRedirectComponent = connect<\n\t\tMapPropsType,\n\t\tDispatchPropsType,\n\t\tWCP,\n\t\tAppStateGlobalType\n\t>(\n\t\tmapStateToPropsForRedirect,\n\t\t{},\n\t)(RedirectComponent);\n\treturn ConnectedAuthRedirectComponent;\n}\n\n//* TYPES:\n// type MapStatePropsType = ReturnType<typeof mapStateToPropsForRedirect>;\n\n// let mapStateToPropsForRedirect = (state: AppStateGlobalType) => ({\n// \tisAuth: state.auth.isAuth,\n// });\n\n// export const withAuthRedirect = (Component: React.ComponentType) => {\n// \tclass RedirectComponent extends React.Component<MapStatePropsType> {\n// \t\trender() {\n// \t\t\tif (!this.props.isAuth) return <Navigate to={'/login'} />;\n\n// \t\t\treturn <Component {...this.props} />;\n// \t\t}\n// \t}\n// \treturn connect(mapStateToPropsForRedirect)(RedirectComponent);\n// };\n","var map = {\n\t\"./avatar-wh-old.png\": 1507,\n\t\"./avatar-wh.png\": 4240,\n\t\"./avatar.png\": 8308,\n\t\"./avatar1.png\": 7059,\n\t\"./avatar2.png\": 5002,\n\t\"./avatar3.png\": 5664,\n\t\"./avatar4.png\": 3635,\n\t\"./avatar5.png\": 5355,\n\t\"./avatar_own.jpg\": 8008,\n\t\"./favicon.png\": 4775,\n\t\"./icon_liked.svg\": 5799,\n\t\"./logo-black.png\": 9905,\n\t\"./logo1200.png\": 1182,\n\t\"./logo192.png\": 1260,\n\t\"./logo300.png\": 5909,\n\t\"./logout.svg\": 5281,\n\t\"./spinner1.gif\": 3860,\n\t\"./spinner2.gif\": 6529\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7173;"],"names":["props","path","id","avatarSrc","require","avatar","className","styles","to","isActive","undefined","src","alt","name","message","maxLength300","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","createField","required","Textarea","type","state","dialogsPage","messagesElements","messages","map","m","dialogsElements","dialogs","d","values","sendMessage","newMessageBody","compose","connect","actions","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","WrappedComponent","restProps","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}